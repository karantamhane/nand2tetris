// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    Register(in=in, load=a, out=out11);
    Register(in=in, load=b, out=out22);
    Register(in=in, load=c, out=out33);
    Register(in=in, load=d, out=out44);
    Register(in=in, load=e, out=out55);
    Register(in=in, load=f, out=out66);
    Register(in=in, load=g, out=out77);
    Register(in=in, load=h, out=out88);
    Mux8Way16(a=out11, b=out22, c=out33, d=out44, e=out55, f=out66, g=out77, h=out88, sel=address, out=out);
}